1.WAP to print the second smallest number in an array.
/*code*/
#include<stdio.h>
int main()
{
    int n;
    scanf("%d",&n);
    int a[n];
    for(int i=0;i<n;i++)
    {
        scanf("%d",&a[i]);
    }
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<n;j++)
        {
            if(a[i]<a[j])
            {
                int temp = a[i];
                a[i] = a[j];
                a[j] = temp;
            }
        }
    }
    printf("the second smallest number is %d",a[1]);
    return 0;
}
/*output:
5
14 9 85 23 6
the second smallest number is 9
*/

2.WAP to reverse print the elements in array.
/*code*/
#include<stdio.h>
int main()
{
    int n;
    scanf("%d",&n);
    int a[n];
    for(int i=0;i<n;i++)
    {
        scanf("%d",&a[i]);
    }
    int b[n];
    for(int i=n;i>0;i--)
    {
        b[n-i] = a[i-1];
    }
    printf("the reversed array is:\n");
    for(int i=0;i<n;i++)
    {
        printf("%d ",b[i]);
    }
    return 0;
}
/*output
5
71 93 85 25 64
the reversed array is:
64 25 85 93 71 
*/

3.WAP to reverse print an elements in an array in the same array(without using temporary array).
/*code*/
#include<stdio.h>
int main()
{
    int n;
    scanf("%d",&n);
    int a[n];
    for(int i=0;i<n;i++)
    {
        scanf("%d",&a[i]);
    }
    printf("the array elements are:\n");
    for(int i=0;i<n;i++)
    {
        printf("%d ",a[i]);
    }
    printf("\n");
    for(int i=0;i<n/2;i++)
    {
        int temp = a[i];
        a[i] = a[n-1-i];
        a[n-1-i] = temp;
    }
    printf("the reversed array elements are:\n");
    for(int i=0;i<n;i++)
    {
        printf("%d ",a[i]);
    }
    return 0;
}
/*output:
5
1 2 3 4 5
the array elements are:
1 2 3 4 5 
the reversed array elements are:
5 4 3 2 1 
*/

4.WAP to pass a character array to a function and return true if the character array is palindrome or return false if its not palindrome.
/*code*/
#include<stdio.h>
#include<stdbool.h>
bool ispalin(char a[])
{
    int l = 0;
    int flag = 0;
    while(a[l]!='\0')
    {
        l++;
    }
    int i = 0;
    while(i<l)
    {
        l--;
        if(a[i]!=a[l])
        {
            flag = 1;
            break;
        }
        i++;
    }
    if(flag==0)
    {
        return true;
    }
    else 
    {
        return false;
    }
}
int main()
{
    int n;
    scanf("%d",&n);
    int a[n];
    scanf("%s",&a);
    if(ispalin(a))
    {
        printf("it is a palindrome\n");
    }
    else 
    {
        printf("it is not a palindrome\n");
    }
    return 0;
}
/*output
5
hello
it is not a palindrome
5
madam
it is a palindrome
*/


5.WAP to pass a character array to a function to swap lower case to upper case and upper case to lower case of the elements in character array.
/*code*/
#include<stdio.h>
#include<string.h>
int main()
{
    char a[] = "Hello World";
    printf("the string before conversion is : %s\n",a);
    int n = sizeof(a)/sizeof(a[0]);
    for(int i=0;i<n;i++)
    {
        if(islower(a[i]))
        {
            a[i] = toupper(a[i]);
        }
        else if(isupper(a[i]))
        {
            a[i] = tolower(a[i]);
        }
    }
    printf("the string after case conversion is : %s\n",a);
    return 0;
}
/*output
the string before conversion is : Hello World
the string after case conversion is : hELLO wORLD
*/

6.WAP to check whether the passed character array to a function is anagram or not.

7.WAP to implement bubble sort.
/*code*/
#include<stdio.h>
int main()
{
    int n;
    scanf("%d",&n);
    int a[n];
    for(int i=0;i<n;i++)
    {
        scanf("%d",&a[i]);
    }
    printf("Before sorting:\n");
    for(int i=0;i<n;i++)
    {
        printf("%d ",a[i]);
    }
    printf("\n");
    for(int i=0;i<n;i++)
    {
        for(int j=i+1;j<n;j++)
        {
            if(a[i]<a[j])
            {
                int temp = a[i];
                a[i] = a[j];
                a[j] = temp;
            }
        }
    }
    printf("after sorting(descending):\n");
    for(int i=0;i<n;i++)
    {
        printf("%d ",a[i]);
    }
    return 0;
}
/*output:
5
8 1 7 6 5
Before sorting:
8 1 7 6 5 
after sorting(descending):
8 7 6 5 1 
*/

8.WAP to implement quick sort.

9.WAP to print the number of prime numbers in a integer array.
/*code*/
#include<stdio.h>
int isprime(int n);
int main()
{
    int n;
    scanf("%d",&n);
    int a[n];
    for(int i=0;i<n;i++)
    {
        scanf("%d",&a[i]);
    }
    int count = 0;
    for(int i=0;i<n;i++)
    {
        if(isprime(a[i])==0)
        {
            count++;
        }
    }
    printf("the no of prime numbers in array is %d",count);
    return 0;
}
int isprime(int n)
{
    int flag = 0;
    for(int i=2;i<n/2;i++)
    {
        if(n%i==0)
        {
            flag = 1;
            break;
        }
    }
    return flag;
}
/*output
5
13 14 15 17 19
the no of prime numbers in array is 3
*/

10.WAP to print the factorial of the elements in a integer array.
/*code*/
#include<stdio.h>
int fact(int n);
int main()
{
    int n;
    scanf("%d",&n);
    int a[n];
    for(int i=0;i<n;i++)
    {
        scanf("%d",&a[i]);
    }
    long int val = 0;
    printf("the factorial of elements in array are :\n");
    for(int i=0;i<n;i++)
    {
        val = fact(a[i]);
        printf("%ld ",val);
    }
    return 0;
}
int fact(int n)
{
    if(n==1 || n==0)
    {
        return 1;
    }
    else 
    {
        return n*fact(n-1);
    }
}
/*output :
5
7 8 9 10 11
the factorial of elements in array are :
5040 40320 362880 3628800 39916800 
*/
